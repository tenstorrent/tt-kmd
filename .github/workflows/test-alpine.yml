name: 'test-alpine'

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:

  build-akms:
    strategy:
      matrix:
        os: [alpine-latest, alpine-3.21]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apk update
        sudo apk add --no-cache akms make linux-headers build-base

    - name: Build and install module with AKMS
      run: |
        # Assuming your module source has an AKMBUILD file in the root or /usr/src/<modname>
        sudo akms install .

    - name: Check AKMS status
      run: |
        sudo akms status

  build-make:
    strategy:
      matrix:
        os: [alpine-latest, alpine-3.21]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Install build tools
      run: |
        sudo apk update
        sudo apk add --no-cache make sparse build-base linux-headers

    - name: Build kernel module
      run: |
        make -j $(nproc)

    - uses: actions/upload-artifact@v4
      with:
        name: driver-${{ matrix.os }}
        path: tenstorrent.ko

    - name: Run sparse static analysis
      run: |
        make C=2 -j $(nproc)